<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Precificação de Emendas - Ministério do Esporte</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/exceljs@4.4.0/dist/exceljs.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.8.3/jspdf.plugin.autotable.min.js"></script>
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-8KNVEWNZMM"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-8KNVEWNZMM');
</script>
    <style>
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Roboto', sans-serif;
}

body {
    background-color: #e9ecef;
    color: #2d3748;
    min-height: 100vh;
}

.header {
    background-color: #003087;
    color: white;
    padding: 1rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    position: relative;
}

.logo {
    height: 50px;
    max-width: 100%;
    object-fit: contain;
}

.container {
    width: 100%;
    max-width: 1200px;
    margin: 1rem auto;
    padding: 1.5rem;
    background: white;
    border-radius: 0.75rem;
    box-shadow: 0 4px 6px rgba(0,0,0,0.1);
}

h1, h2 {
    color: #003087;
    margin-bottom: 1.5rem;
    font-weight: 700;
}

h1 {
    text-align: center;
    font-size: 1.75rem;
}

h2 {
    font-size: 1.5rem;
}

.resumo-valores {
    background-color: #f8fafc;
    padding: 1.25rem;
    border-radius: 0.5rem;
    margin-bottom: 2rem;
    border-left: 4px solid #003087;
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
}

.resumo-valores p {
    margin: 0.25rem 0;
    min-width: 200px;
    font-size: 1rem;
    flex: 1 1 200px;
}

.resumo-valores span {
    font-weight: bold;
    color: #003087;
}

.tabs {
    display: flex;
    margin-bottom: 1rem;
    border-bottom: 1px solid #e2e8f0;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
}

.tab {
    padding: 0.75rem 1.5rem;
    cursor: pointer;
    border: 1px solid transparent;
    border-bottom: none;
    border-radius: 0.5rem 0.5rem 0 0;
    margin-right: 0.25rem;
    background-color: #f1f1f1;
    font-size: 1rem;
    transition: all 0.3s ease;
    white-space: nowrap;
    flex-shrink: 0;
}

.tab.active {
    background-color: white;
    border-color: #e2e8f0;
    border-bottom-color: white;
    color: #003087;
    font-weight: bold;
}

.tab-content {
    display: none;
}

.tab-content.active {
    display: block;
}

.formulario-item {
    background-color: #f8fafc;
    padding: 1.25rem;
    border-radius: 0.5rem;
    margin-bottom: 1.25rem;
}

.form-group {
    margin-bottom: 1.25rem;
}

.form-group label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
    color: #003087;
    font-size: 1rem;
}

.form-group input,
.form-group textarea,
.form-group select {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #e2e8f0;
    border-radius: 0.5rem;
    font-size: 1rem;
    transition: border-color 0.3s;
}

.form-group input:focus,
.form-group textarea:focus,
.form-group select:focus {
    outline: none;
    border-color: #003087;
    box-shadow: 0 0 0 2px rgba(0, 48, 135, 0.1);
}

.form-group input[readonly] {
    background-color: #e9ecef;
    cursor: not-allowed;
}

.form-group textarea {
    min-height: 5rem;
    resize: vertical;
}

.empresas-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.25rem;
    margin-top: 1.25rem;
}

.empresa {
    background-color: white;
    padding: 1rem;
    border-radius: 0.5rem;
    border: 1px solid #e2e8f0;
}

.empresa h4 {
    margin-bottom: 0.5rem;
    color: #003087;
    border-bottom: 1px solid #e2e8f0;
    padding-bottom: 0.25rem;
    font-size: 1.125rem;
}

.btn {
    background-color: #003087;
    color: white;
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 0.5rem;
    cursor: pointer;
    font-size: 1rem;
    font-weight: 500;
    transition: all 0.3s ease;
    display: inline-block;
    text-align: center;
}

.btn:hover {
    background-color: #00205b;
    transform: translateY(-2px);
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.btn-success {
    background-color: #16a34a;
}

.btn-success:hover {
    background-color: #15803d;
}

.btn:disabled {
    background-color: #cccccc;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
}

.carrinho {
    margin-top: 1.5rem;
    padding: 1.25rem;
    background-color: #f8fafc;
    border-radius: 0.5rem;
    width: 100%;
}

.carrinho h3 {
    color: #003087;
    margin-bottom: 1rem;
    font-size: 1.25rem;
}

.carrinho-vazio {
    color: #6b7280;
    padding: 1.25rem;
    text-align: center;
}

.item-carrinho {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    padding: 0.75rem 0;
    border-bottom: 1px solid #e2e8f0;
    align-items: center;
}

.item-carrinho-info {
    flex: 1 1 200px;
}

.item-carrinho-info p,
.item-carrinho-info span {
    display: block;
}

.item-carrinho-acoes button {
    background-color: #dc2626;
    color: white;
    border: none;
    padding: 0.5rem 0.75rem;
    border-radius: 0.25rem;
    cursor: pointer;
    font-size: 0.875rem;
    transition: background-color 0.3s;
}

.item-carrinho-acoes button:hover {
    background-color: #b91c1c;
}

.total-carrinho {
    margin-top: 1rem;
    font-weight: bold;
    font-size: 1.125rem;
    color: #003087;
    text-align: right;
}

.acoes-carrinho {
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-end;
    margin-top: 1.25rem;
    gap: 0.75rem;
}

.declaracao-container {
    margin-top: 1.25rem;
    padding: 1rem;
    background-color: white;
    border: 1px solid #e2e8f0;
    border-radius: 0.5rem;
}

.declaracao-container label {
    font-size: 0.875rem;
    color: #4b5563;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    cursor: pointer;
}

.footer {
    text-align: center;
    margin-top: 2rem;
    padding: 1.25rem;
    color: #6b7280;
    font-size: 0.875rem;
}

.suggestions {
    position: absolute;
    background: white;
    border: 1px solid #e2e8f0;
    max-height: 200px;
    overflow-y: auto;
    width: calc(100% - 2px);
    z-index: 1000;
    border-radius: 0 0 0.25rem 0.25rem;
    box-shadow: 0 4px 6px rgba(0,0,0,0.1);
}

.suggestion-item {
    padding: 0.5rem 0.75rem;
    cursor: pointer;
    transition: background-color 0.2s;
}

.suggestion-item:hover {
    background-color: #f0f0f0;
}

.error-message {
    color: #dc2626;
    font-size: 0.875rem;
    margin-top: 0.25rem;
    display: none;
}

.status-cnpj {
    margin-left: 0.5rem;
    font-size: 0.875rem;
    font-weight: 500;
    display: inline-block;
}

.status-cnpj.ativa {
    color: #16a34a;
}

.status-cnpj.inativa {
    color: #dc2626;
}

.status-cnpj.erro {
    color: #f59e0b;
}

/* Media Queries para diferentes tamanhos de tela */
@media (max-width: 1024px) {
    .container {
        padding: 1.25rem;
    }
    
    .empresas-container {
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    }
}

@media (max-width: 768px) {
    .header {
        flex-direction: column;
        gap: 0.75rem;
        padding: 1rem;
    }
    
    .container {
        margin: 0.75rem;
        padding: 1rem;
        border-radius: 0.5rem;
    }
    
    h1 {
        font-size: 1.5rem;
    }
    
    h2 {
        font-size: 1.25rem;
    }
    
    .resumo-valores {
        flex-direction: column;
        gap: 0.5rem;
    }
    
    .tabs {
        flex-wrap: nowrap;
        overflow-x: auto;
        padding-bottom: 0.25rem;
    }
    
    .tab {
        padding: 0.5rem 1rem;
        font-size: 0.875rem;
    }
    
    .btn {
        padding: 0.625rem 1.25rem;
        font-size: 0.875rem;
    }
}

@media (max-width: 480px) {
    .container {
        margin: 0.5rem;
        padding: 0.75rem;
    }
    
    h1 {
        font-size: 1.25rem;
        margin-bottom: 1rem;
    }
    
    .empresas-container {
        grid-template-columns: 1fr;
    }
    
    .item-carrinho {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.5rem;
    }
    
    .acoes-carrinho {
        justify-content: center;
    }
    
    .btn {
        width: 100%;
    }
    
    .form-group input,
    .form-group textarea,
    .form-group select {
        padding: 0.625rem;
    }
}
    </style>
</head>
<body>
    <header class="header">
        <img src="/images/ASSINATURAS_ESPORTE__PRINCIPAL.png" alt="Ministério do Esporte" class="logo">
        <h2>Sistema de Precificação de Emendas</h2>
    </header>

    <div class="container">
        <h1>Precificação de Itens</h1>

        <div class="resumo-valores">
            <p><span>Valor Total da Emenda:</span> <strong id="valor-total">R$ 0,00</strong></p>
            <p><span>Valor Gasto:</span> <strong id="valor-gasto">R$ 0,00</strong></p>
            <p><span>Valor Restante:</span> <strong id="valor-restante">R$ 0,00</strong></p>
        </div>

        <div class="tabs">
            <div class="tab active" data-tab="servicos">Serviços/Recursos Humanos</div>
            <div class="tab" data-tab="material-esportivo">Material Esportivo</div>
            <div class="tab" data-tab="uniformes">Uniformes</div>
            <div class="tab" data-tab="identidades-divulgacoes">Identidades/Divulgações</div>
            <div class="tab" data-tab="alimentacao">Alimentação</div>
        </div>

        <!-- Serviços -->
        <div id="servicos" class="tab-content active">
            <div class="formulario-item">
                <h2>Adicionar Item - Serviços/Recursos Humanos</h2>
                <div class="form-group">
                    <label for="srv-cargo">Serviço</label>
                    <select id="srv-cargo" onchange="toggleOutrosField('srv')">
                        <option value="">Selecione um cargo</option>
                    </select>
                </div>
                <div class="form-group" id="srv-outros-container" style="display: none;">
                    <label for="srv-outros">Especifique o Serviço</label>
                    <input type="text" id="srv-outros" placeholder="Digite o serviço">
                </div>
                <div class="form-group">
                    <label for="srv-descricao">Descrição do Serviço/Método de Cálculo</label>
                    <textarea id="srv-descricao" placeholder="Ex: PROFESSOR - Responsável pela preparação e execução das aulas"></textarea>
                </div>
                <div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 15px;">
                    <div class="form-group">
                        <label for="srv-quantidade">Quantidade</label>
                        <input type="number" id="srv-quantidade" min="1" value="1">
                    </div>
                    <div class="form-group">
                        <label for="srv-periodo">Diárias/Meses</label>
                        <select id="srv-periodo">
                            <option value="diarias">Diárias</option>
                            <option value="meses">Meses</option>
                            <option value="UN">UN</option>
                            <option value="Kit">Kit</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="srv-periodo-valor">Período</label>
                        <input type="number" id="srv-periodo-valor" min="1" value="1">
                    </div>
                    <div class="form-group">
                        <label for="srv-total">Total</label>
                        <input type="number" id="srv-total" readonly>
                    </div>
                </div>
                <h3 style="margin-top: 20px;">Empresas Cotadas</h3>
                <div class="empresas-container">
                    <div class="empresa">
                        <h4>Empresa 1</h4>
                        <div class="form-group">
                            <label for="srv-empresa1-nome">Nome</label>
                            <input type="text" id="srv-empresa1-nome" placeholder="Nome da empresa">
                        </div>
                        <div class="form-group">
                            <label for="srv-empresa1-cnpj">CNPJ</label>
                            <input type="text" id="srv-empresa1-cnpj" placeholder="00.000.000/0000-00">
                            <span id="srv-empresa1-status" class="status-cnpj"></span>
                        </div>
                        <div class="form-group">
                            <label for="srv-empresa1-link">Link</label>
                            <input type="url" id="srv-empresa1-link" placeholder="https://...">
                        </div>
                        <div class="form-group">
                            <label for="srv-empresa1-unitario">Valor Unitário (R$)</label>
                            <input type="text" id="srv-empresa1-unitario" class="valor-monetario" placeholder="0,00">
                        </div>
                        <div class="form-group">
                            <label for="srv-empresa1-total">Valor Total (R$)</label>
                            <input type="text" id="srv-empresa1-total" readonly>
                        </div>
                        <div class="form-group">
                            <label for="srv-empresa1-selecionada">Selecionar Empresa</label>
                            <input type="radio" name="srv-empresa-selecionada" id="srv-empresa1-selecionada" value="1" onchange="mostrarJustificativa('srv', 1)">
                        </div>
                    </div>
                    <div class="empresa">
                        <h4>Empresa 2</h4>
                        <div class="form-group">
                            <label for="srv-empresa2-nome">Nome</label>
                            <input type="text" id="srv-empresa2-nome" placeholder="Nome da empresa">
                        </div>
                        <div class="form-group">
                            <label for="srv-empresa2-cnpj">CNPJ</label>
                            <input type="text" id="srv-empresa2-cnpj" placeholder="00.000.000/0000-00">
                            <span id="srv-empresa2-status" class="status-cnpj"></span>
                        </div>
                        <div class="form-group">
                            <label for="srv-empresa2-link">Link</label>
                            <input type="url" id="srv-empresa2-link" placeholder="https://...">
                        </div>
                        <div class="form-group">
                            <label for="srv-empresa2-unitario">Valor Unitário (R$)</label>
                            <input type="text" id="srv-empresa2-unitario" class="valor-monetario" placeholder="0,00">
                        </div>
                        <div class="form-group">
                            <label for="srv-empresa2-total">Valor Total (R$)</label>
                            <input type="text" id="srv-empresa2-total" readonly>
                        </div>
                        <div class="form-group">
                            <label for="srv-empresa2-selecionada">Selecionar Empresa</label>
                            <input type="radio" name="srv-empresa-selecionada" id="srv-empresa2-selecionada" value="2" onchange="mostrarJustificativa('srv', 2)">
                        </div>
                    </div>
                    <div class="empresa">
                        <h4>Empresa 3</h4>
                        <div class="form-group">
                            <label for="srv-empresa3-nome">Nome</label>
                            <input type="text" id="srv-empresa3-nome" placeholder="Nome da empresa">
                        </div>
                        <div class="form-group">
                            <label for="srv-empresa3-cnpj">CNPJ</label>
                            <input type="text" id="srv-empresa3-cnpj" placeholder="00.000.000/0000-00">
                            <span id="srv-empresa3-status" class="status-cnpj"></span>
                        </div>
                        <div class="form-group">
                            <label for="srv-empresa3-link">Link</label>
                            <input type="url" id="srv-empresa3-link" placeholder="https://...">
                        </div>
                        <div class="form-group">
                            <label for="srv-empresa3-unitario">Valor Unitário (R$)</label>
                            <input type="text" id="srv-empresa3-unitario" class="valor-monetario" placeholder="0,00">
                        </div>
                        <div class="form-group">
                            <label for="srv-empresa3-total">Valor Total (R$)</label>
                            <input type="text" id="srv-empresa3-total" readonly>
                        </div>
                        <div class="form-group">
                            <label for="srv-empresa3-selecionada">Selecionar Empresa</label>
                            <input type="radio" name="srv-empresa-selecionada" id="srv-empresa3-selecionada" value="3" onchange="mostrarJustificativa('srv', 3)">
                        </div>
                    </div>
                </div>
                <div class="form-group" style="margin-top: 20px;">
                    <label for="srv-menor-valor">Menor Valor Cotado (R$)</label>
                    <input type="text" id="srv-menor-valor" readonly>
                </div>
                <div class="form-group" id="srv-justificativa-container" style="display: none;">
                    <label for="srv-justificativa">Justificativa</label>
                    <textarea id="srv-justificativa" placeholder="Justifique a escolha de uma empresa com valor superior ao menor cotado"></textarea>
                </div>
                <button class="btn btn-success" id="srv-adicionar-carrinho">Adicionar ao Carrinho</button>
            </div>
        </div>

        <!-- Material Esportivo -->
        <div id="material-esportivo" class="tab-content">
            <div class="formulario-item">
                <h2>Adicionar Item - Material Esportivo</h2>
                <div class="form-group">
                    <label for="me-tipo">Tipo</label>
                    <select id="me-tipo" onchange="toggleLocacaoFields()">
                        <option value="aquisicao">Aquisição</option>
                        <option value="locacao">Locação</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="me-item">Item</label>
                    <input type="text" id="me-item" oninput="filtrarItens('me')" placeholder="Digite o item">
                    <div id="me-item-suggestions" class="suggestions" style="display: none;"></div>
                </div>
                <div class="form-group">
                    <label for="me-subitem">Subitem</label>
                    <input type="text" id="me-subitem" oninput="filtrarSubitens('me')" placeholder="Digite o subitem">
                    <div id="me-subitem-suggestions" class="suggestions" style="display: none;"></div>
                </div>
                <div class="form-group" id="me-outros-container" style="display: none;">
                    <label for="me-outros">Especifique o Item</label>
                    <input type="text" id="me-outros" placeholder="Digite o item">
                </div>
                <div class="form-group">
                    <label for="me-descricao">Descrição do Item</label>
                    <textarea id="me-descricao" placeholder="Descreva o item"></textarea>
                </div>
                <div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 15px;">
                    <div class="form-group">
                        <label for="me-quantidade">Quantidade</label>
                        <input type="number" id="me-quantidade" min="1" value="1">
                    </div>
                    <div class="form-group" id="me-periodo-container">
                        <label for="me-periodo">Diárias/Meses</label>
                        <select id="me-periodo">
                            <option value="diarias">Diárias</option>
                            <option value="meses">Meses</option>
                            <option value="UN">UN</option>
                            <option value="Kit">Kit</option>
                        </select>
                    </div>
                    <div class="form-group" id="me-periodo-valor-container">
                        <label for="me-periodo-valor">Período</label>
                        <input type="number" id="me-periodo-valor" min="1" value="1">
                    </div>
                    <div class="form-group">
                        <label for="me-total">Total</label>
                        <input type="number" id="me-total" readonly>
                    </div>
                </div>
                <h3 style="margin-top: 20px;">Empresas Cotadas</h3>
                <div class="empresas-container">
                    <div class="empresa">
                        <h4>Empresa 1</h4>
                        <div class="form-group">
                            <label for="me-empresa1-nome">Nome</label>
                            <input type="text" id="me-empresa1-nome" placeholder="Nome da empresa">
                        </div>
                        <div class="form-group">
                            <label for="me-empresa1-cnpj">CNPJ</label>
                            <input type="text" id="me-empresa1-cnpj" placeholder="00.000.000/0000-00">
                            <span id="srv-empresa1-status" class="status-cnpj"></span>
                        </div>
                        <div class="form-group">
                            <label for="me-empresa1-link">Link</label>
                            <input type="url" id="me-empresa1-link" placeholder="https://...">
                        </div>
                        <div class="form-group">
                            <label for="me-empresa1-unitario">Valor Unitário (R$)</label>
                            <input type="text" id="me-empresa1-unitario" class="valor-monetario" placeholder="0,00">
                        </div>
                        <div class="form-group">
                            <label for="me-empresa1-total">Valor Total (R$)</label>
                            <input type="text" id="me-empresa1-total" readonly>
                        </div>
                        <div class="form-group">
                            <label for="me-empresa1-selecionada">Selecionar Empresa</label>
                            <input type="radio" name="me-empresa-selecionada" id="me-empresa1-selecionada" value="1" onchange="mostrarJustificativa('me', 1)">
                        </div>
                    </div>
                    <div class="empresa">
                        <h4>Empresa 2</h4>
                        <div class="form-group">
                            <label for="me-empresa2-nome">Nome</label>
                            <input type="text" id="me-empresa2-nome" placeholder="Nome da empresa">
                        </div>
                        <div class="form-group">
                            <label for="me-empresa2-cnpj">CNPJ</label>
                            <input type="text" id="me-empresa2-cnpj" placeholder="00.000.000/0000-00">
                            <span id="srv-empresa2-status" class="status-cnpj"></span>
                        </div>
                        <div class="form-group">
                            <label for="me-empresa2-link">Link</label>
                            <input type="url" id="me-empresa2-link" placeholder="https://...">
                        </div>
                        <div class="form-group">
                            <label for="me-empresa2-unitario">Valor Unitário (R$)</label>
                            <input type="text" id="me-empresa2-unitario" class="valor-monetario" placeholder="0,00">
                        </div>
                        <div class="form-group">
                            <label for="me-empresa2-total">Valor Total (R$)</label>
                            <input type="text" id="me-empresa2-total" readonly>
                        </div>
                        <div class="form-group">
                            <label for="me-empresa2-selecionada">Selecionar Empresa</label>
                            <input type="radio" name="me-empresa-selecionada" id="me-empresa2-selecionada" value="2" onchange="mostrarJustificativa('me', 2)">
                        </div>
                    </div>
                    <div class="empresa">
                        <h4>Empresa 3</h4>
                        <div class="form-group">
                            <label for="me-empresa3-nome">Nome</label>
                            <input type="text" id="me-empresa3-nome" placeholder="Nome da empresa">
                        </div>
                        <div class="form-group">
                            <label for="me-empresa3-cnpj">CNPJ</label>
                            <input type="text" id="me-empresa3-cnpj" placeholder="00.000.000/0000-00">
                            <span id="srv-empresa3-status" class="status-cnpj"></span>
                        </div>
                        <div class="form-group">
                            <label for="me-empresa3-link">Link</label>
                            <input type="url" id="me-empresa3-link" placeholder="https://...">
                        </div>
                        <div class="form-group">
                            <label for="me-empresa3-unitario">Valor Unitário (R$)</label>
                            <input type="text" id="me-empresa3-unitario" class="valor-monetario" placeholder="0,00">
                        </div>
                        <div class="form-group">
                            <label for="me-empresa3-total">Valor Total (R$)</label>
                            <input type="text" id="me-empresa3-total" readonly>
                        </div>
                        <div class="form-group">
                            <label for="me-empresa3-selecionada">Selecionar Empresa</label>
                            <input type="radio" name="me-empresa-selecionada" id="me-empresa3-selecionada" value="3" onchange="mostrarJustificativa('me', 3)">
                        </div>
                    </div>
                </div>
                <div class="form-group" style="margin-top: 20px;">
                    <label for="me-menor-valor">Menor Valor Cotado (R$)</label>
                    <input type="text" id="me-menor-valor" readonly>
                </div>
                <div class="form-group" id="me-justificativa-container" style="display: none;">
                    <label for="me-justificativa">Justificativa</label>
                    <textarea id="me-justificativa" placeholder="Justifique a escolha de uma empresa com valor superior ao menor cotado"></textarea>
                </div>
                <button class="btn btn-success" id="me-adicionar-carrinho">Adicionar ao Carrinho</button>
            </div>
        </div>

        <!-- Uniformes -->
        <div id="uniformes" class="tab-content">
            <div class="formulario-item">
                <h2>Adicionar Item - Uniformes</h2>
                <div class="form-group">
                    <label for="uni-item">Item</label>
                    <input type="text" id="uni-item" oninput="filtrarItens('uni')" placeholder="Digite o item">
                    <div id="uni-item-suggestions" class="suggestions" style="display: none;"></div>
                </div>
                <div class="form-group">
                    <label for="uni-subitem">Subitem</label>
                    <input type="text" id="uni-subitem" oninput="filtrarSubitens('uni')" placeholder="Digite o subitem">
                    <div id="uni-subitem-suggestions" class="suggestions" style="display: none;"></div>
                </div>
                <div class="form-group" id="uni-outros-container" style="display: none;">
                    <label for="uni-outros">Especifique o Item</label>
                    <input type="text" id="uni-outros" placeholder="Digite o item">
                </div>
                <div class="form-group">
                    <label for="uni-descricao">Descrição do Item</label>
                    <textarea id="uni-descricao" placeholder="Descreva o item"></textarea>
                </div>
                <div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 15px;">
                    <div class="form-group">
                        <label for="uni-quantidade">Quantidade</label>
                        <input type="number" id="uni-quantidade" min="1" value="1">
                    </div>
                    <div class="form-group">
                        <label for="uni-periodo">Diárias/Meses</label>
                        <select id="uni-periodo">
                            <option value="diarias">Diárias</option>
                            <option value="meses">Meses</option>
                            <option value="UN">UN</option>
                            <option value="Kit">Kit</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="uni-periodo-valor">Período</label>
                        <input type="number" id="uni-periodo-valor" min="1" value="1">
                    </div>
                    <div class="form-group">
                        <label for="uni-total">Total</label>
                        <input type="number" id="uni-total" readonly>
                    </div>
                </div>
                <h3 style="margin-top: 20px;">Empresas Cotadas</h3>
                <div class="empresas-container">
                    <div class="empresa">
                        <h4>Empresa 1</h4>
                        <div class="form-group">
                            <label for="uni-empresa1-nome">Nome</label>
                            <input type="text" id="uni-empresa1-nome" placeholder="Nome da empresa">
                        </div>
                        <div class="form-group">
                            <label for="uni-empresa1-cnpj">CNPJ</label>
                            <input type="text" id="uni-empresa1-cnpj" placeholder="00.000.000/0000-00">
                            <span id="srv-empresa1-status" class="status-cnpj"></span>
                        </div>
                        <div class="form-group">
                            <label for="uni-empresa1-link">Link</label>
                            <input type="url" id="uni-empresa1-link" placeholder="https://...">
                        </div>
                        <div class="form-group">
                            <label for="uni-empresa1-unitario">Valor Unitário (R$)</label>
                            <input type="text" id="uni-empresa1-unitario" class="valor-monetario" placeholder="0,00">
                        </div>
                        <div class="form-group">
                            <label for="uni-empresa1-total">Valor Total (R$)</label>
                            <input type="text" id="uni-empresa1-total" readonly>
                        </div>
                        <div class="form-group">
                            <label for="uni-empresa1-selecionada">Selecionar Empresa</label>
                            <input type="radio" name="uni-empresa-selecionada" id="uni-empresa1-selecionada" value="1" onchange="mostrarJustificativa('uni', 1)">
                        </div>
                    </div>
                    <div class="empresa">
                        <h4>Empresa 2</h4>
                        <div class="form-group">
                            <label for="uni-empresa2-nome">Nome</label>
                            <input type="text" id="uni-empresa2-nome" placeholder="Nome da empresa">
                        </div>
                        <div class="form-group">
                            <label for="uni-empresa2-cnpj">CNPJ</label>
                            <input type="text" id="uni-empresa2-cnpj" placeholder="00.000.000/0000-00">
                            <span id="srv-empresa2-status" class="status-cnpj"></span>
                        </div>
                        <div class="form-group">
                            <label for="uni-empresa2-link">Link</label>
                            <input type="url" id="uni-empresa2-link" placeholder="https://...">
                        </div>
                        <div class="form-group">
                            <label for="uni-empresa2-unitario">Valor Unitário (R$)</label>
                            <input type="text" id="uni-empresa2-unitario" class="valor-monetario" placeholder="0,00">
                        </div>
                        <div class="form-group">
                            <label for="uni-empresa2-total">Valor Total (R$)</label>
                            <input type="text" id="uni-empresa2-total" readonly>
                        </div>
                        <div class="form-group">
                            <label for="uni-empresa2-selecionada">Selecionar Empresa</label>
                            <input type="radio" name="uni-empresa-selecionada" id="uni-empresa2-selecionada" value="2" onchange="mostrarJustificativa('uni', 2)">
                        </div>
                    </div>
                    <div class="empresa">
                        <h4>Empresa 3</h4>
                        <div class="form-group">
                            <label for="uni-empresa3-nome">Nome</label>
                            <input type="text" id="uni-empresa3-nome" placeholder="Nome da empresa">
                        </div>
                        <div class="form-group">
                            <label for="uni-empresa3-cnpj">CNPJ</label>
                            <input type="text" id="uni-empresa3-cnpj" placeholder="00.000.000/0000-00">
                            <span id="srv-empresa3-status" class="status-cnpj"></span>
                        </div>
                        <div class="form-group">
                            <label for="uni-empresa3-link">Link</label>
                            <input type="url" id="uni-empresa3-link" placeholder="https://...">
                        </div>
                        <div class="form-group">
                            <label for="uni-empresa3-unitario">Valor Unitário (R$)</label>
                            <input type="text" id="uni-empresa3-unitario" class="valor-monetario" placeholder="0,00">
                        </div>
                        <div class="form-group">
                            <label for="uni-empresa3-total">Valor Total (R$)</label>
                            <input type="text" id="uni-empresa3-total" readonly>
                        </div>
                        <div class="form-group">
                            <label for="uni-empresa3-selecionada">Selecionar Empresa</label>
                            <input type="radio" name="uni-empresa-selecionada" id="uni-empresa3-selecionada" value="3" onchange="mostrarJustificativa('uni', 3)">
                        </div>
                    </div>
                </div>
                <div class="form-group" style="margin-top: 20px;">
                    <label for="uni-menor-valor">Menor Valor Cotado (R$)</label>
                    <input type="text" id="uni-menor-valor" readonly>
                </div>
                <div class="form-group" id="uni-justificativa-container" style="display: none;">
                    <label for="uni-justificativa">Justificativa</label>
                    <textarea id="uni-justificativa" placeholder="Justifique a escolha de uma empresa com valor superior ao menor cotado"></textarea>
                </div>
                <button class="btn btn-success" id="uni-adicionar-carrinho">Adicionar ao Carrinho</button>
            </div>
        </div>

        <!-- Identidades/Divulgações -->
        <div id="identidades-divulgacoes" class="tab-content">
            <div class="formulario-item">
                <h2>Adicionar Item - Identidades/Divulgações</h2>
                <div class="form-group">
                    <label for="idv-item">Item</label>
                    <input type="text" id="idv-item" oninput="filtrarItens('idv')" placeholder="Digite o item">
                    <div id="idv-item-suggestions" class="suggestions" style="display: none;"></div>
                </div>
                <div class="form-group">
                    <label for="idv-subitem">Subitem</label>
                    <input type="text" id="idv-subitem" oninput="filtrarSubitens('idv')" placeholder="Digite o subitem">
                    <div id="idv-subitem-suggestions" class="suggestions" style="display: none;"></div>
                </div>
                <div class="form-group" id="idv-outros-container" style="display: none;">
                    <label for="idv-outros">Especifique o Item</label>
                    <input type="text" id="idv-outros" placeholder="Digite o item">
                </div>
                <div class="form-group">
                    <label for="idv-descricao">Descrição do Item</label>
                    <textarea id="idv-descricao" placeholder="Descreva o item"></textarea>
                </div>
                <div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 15px;">
                    <div class="form-group">
                        <label for="idv-quantidade">Quantidade</label>
                        <input type="number" id="idv-quantidade" min="1" value="1">
                    </div>
                    <div class="form-group">
                        <label for="idv-periodo">Diárias/Meses</label>
                        <select id="idv-periodo">
                            <option value="diarias">Diárias</option>
                            <option value="meses">Meses</option>
                            <option value="UN">UN</option>
                            <option value="Kit">Kit</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="idv-periodo-valor">Período</label>
                        <input type="number" id="idv-periodo-valor" min="1" value="1">
                    </div>
                    <div class="form-group">
                        <label for="idv-total">Total</label>
                        <input type="number" id="idv-total" readonly>
                    </div>
                </div>
                <h3 style="margin-top: 20px;">Empresas Cotadas</h3>
                <div class="empresas-container">
                    <div class="empresa">
                        <h4>Empresa 1</h4>
                        <div class="form-group">
                            <label for="idv-empresa1-nome">Nome</label>
                            <input type="text" id="idv-empresa1-nome" placeholder="Nome da empresa">
                        </div>
                        <div class="form-group">
                            <label for="idv-empresa1-cnpj">CNPJ</label>
                            <input type="text" id="idv-empresa1-cnpj" placeholder="00.000.000/0000-00">
                            <span id="srv-empresa1-status" class="status-cnpj"></span>
                        </div>
                        <div class="form-group">
                            <label for="idv-empresa1-link">Link</label>
                            <input type="url" id="idv-empresa1-link" placeholder="https://...">
                        </div>
                        <div class="form-group">
                            <label for="idv-empresa1-unitario">Valor Unitário (R$)</label>
                            <input type="text" id="idv-empresa1-unitario" class="valor-monetario" placeholder="0,00">
                        </div>
                        <div class="form-group">
                            <label for="idv-empresa1-total">Valor Total (R$)</label>
                            <input type="text" id="idv-empresa1-total" readonly>
                        </div>
                        <div class="form-group">
                            <label for="idv-empresa1-selecionada">Selecionar Empresa</label>
                            <input type="radio" name="idv-empresa-selecionada" id="idv-empresa1-selecionada" value="1" onchange="mostrarJustificativa('idv', 1)">
                        </div>
                    </div>
                    <div class="empresa">
                        <h4>Empresa 2</h4>
                        <div class="form-group">
                            <label for="idv-empresa2-nome">Nome</label>
                            <input type="text" id="idv-empresa2-nome" placeholder="Nome da empresa">
                        </div>
                        <div class="form-group">
                            <label for="idv-empresa2-cnpj">CNPJ</label>
                            <input type="text" id="idv-empresa2-cnpj" placeholder="00.000.000/0000-00">
                            <span id="srv-empresa2-status" class="status-cnpj"></span>
                        </div>
                        <div class="form-group">
                            <label for="idv-empresa2-link">Link</label>
                            <input type="url" id="idv-empresa2-link" placeholder="https://...">
                        </div>
                        <div class="form-group">
                            <label for="idv-empresa2-unitario">Valor Unitário (R$)</label>
                            <input type="text" id="idv-empresa2-unitario" class="valor-monetario" placeholder="0,00">
                        </div>
                        <div class="form-group">
                            <label for="idv-empresa2-total">Valor Total (R$)</label>
                            <input type="text" id="idv-empresa2-total" readonly>
                        </div>
                        <div class="form-group">
                            <label for="idv-empresa2-selecionada">Selecionar Empresa</label>
                            <input type="radio" name="idv-empresa-selecionada" id="idv-empresa2-selecionada" value="2" onchange="mostrarJustificativa('idv', 2)">
                        </div>
                    </div>
                    <div class="empresa">
                        <h4>Empresa 3</h4>
                        <div class="form-group">
                            <label for="idv-empresa3-nome">Nome</label>
                            <input type="text" id="idv-empresa3-nome" placeholder="Nome da empresa">
                        </div>
                        <div class="form-group">
                            <label for="idv-empresa3-cnpj">CNPJ</label>
                            <input type="text" id="idv-empresa3-cnpj" placeholder="00.000.000/0000-00">
                            <span id="srv-empresa3-status" class="status-cnpj"></span>
                        </div>
                        <div class="form-group">
                            <label for="idv-empresa3-link">Link</label>
                            <input type="url" id="idv-empresa3-link" placeholder="https://...">
                        </div>
                        <div class="form-group">
                            <label for="idv-empresa3-unitario">Valor Unitário (R$)</label>
                            <input type="text" id="idv-empresa3-unitario" class="valor-monetario" placeholder="0,00">
                        </div>
                        <div class="form-group">
                            <label for="idv-empresa3-total">Valor Total (R$)</label>
                            <input type="text" id="idv-empresa3-total" readonly>
                        </div>
                        <div class="form-group">
                            <label for="idv-empresa3-selecionada">Selecionar Empresa</label>
                            <input type="radio" name="idv-empresa-selecionada" id="idv-empresa3-selecionada" value="3" onchange="mostrarJustificativa('idv', 3)">
                        </div>
                    </div>
                </div>
                <div class="form-group" style="margin-top: 20px;">
                    <label for="idv-menor-valor">Menor Valor Cotado (R$)</label>
                    <input type="text" id="idv-menor-valor" readonly>
                </div>
                <div class="form-group" id="idv-justificativa-container" style="display: none;">
                    <label for="idv-justificativa">Justificativa</label>
                    <textarea id="idv-justificativa" placeholder="Justifique a escolha de uma empresa com valor superior ao menor cotado"></textarea>
                </div>
                <button class="btn btn-success" id="idv-adicionar-carrinho">Adicionar ao Carrinho</button>
            </div>
        </div>

        <!-- Alimentação -->
        <div id="alimentacao" class="tab-content">
            <div class="formulario-item">
                <h2>Adicionar Item - Alimentação</h2>
                <div class="form-group">
                    <label for="ali-item">Item</label>
                    <input type="text" id="ali-item" oninput="filtrarItens('ali')" placeholder="Digite o item">
                    <div id="ali-item-suggestions" class="suggestions" style="display: none;"></div>
                </div>
                <div class="form-group">
                    <label for="ali-subitem">Subitem</label>
                    <input type="text" id="ali-subitem" oninput="filtrarSubitens('ali')" placeholder="Digite o subitem">
                    <div id="ali-subitem-suggestions" class="suggestions" style="display: none;"></div>
                </div>
                <div class="form-group" id="ali-outros-container" style="display: none;">
                    <label for="ali-outros">Especifique o Item</label>
                    <input type="text" id="ali-outros" placeholder="Digite o item">
                </div>
                <div class="form-group">
                    <label for="ali-descricao">Descrição do Item</label>
                    <textarea id="ali-descricao" placeholder="Descreva o item"></textarea>
                </div>
                <div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 15px;">
                    <div class="form-group">
                        <label for="ali-quantidade">Quantidade</label>
                        <input type="number" id="ali-quantidade" min="1" value="1">
                    </div>
                    <div class="form-group">
                        <label for="ali-periodo">Diárias/Meses</label>
                        <select id="ali-periodo">
                            <option value="diarias">Diárias</option>
                            <option value="meses">Meses</option>
                            <option value="UN">UN</option>
                            <option value="Kit">Kit</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="ali-periodo-valor">Período</label>
                        <input type="number" id="ali-periodo-valor" min="1" value="1">
                    </div>
                    <div class="form-group">
                        <label for="ali-total">Total</label>
                        <input type="number" id="ali-total" readonly>
                    </div>
                </div>
                <h3 style="margin-top: 20px;">Empresas Cotadas</h3>
                <div class="empresas-container">
                    <div class="empresa">
                        <h4>Empresa 1</h4>
                        <div class="form-group">
                            <label for="ali-empresa1-nome">Nome</label>
                            <input type="text" id="ali-empresa1-nome" placeholder="Nome da empresa">
                        </div>
                        <div class="form-group">
                            <label for="ali-empresa1-cnpj">CNPJ</label>
                            <input type="text" id="ali-empresa1-cnpj" placeholder="00.000.000/0000-00">
                            <span id="srv-empresa1-status" class="status-cnpj"></span>
                        </div>
                        <div class="form-group">
                            <label for="ali-empresa1-link">Link</label>
                            <input type="url" id="ali-empresa1-link" placeholder="https://...">
                        </div>
                        <div class="form-group">
                            <label for="ali-empresa1-unitario">Valor Unitário (R$)</label>
                            <input type="text" id="ali-empresa1-unitario" class="valor-monetario" placeholder="0,00">
                        </div>
                        <div class="form-group">
                            <label for="ali-empresa1-total">Valor Total (R$)</label>
                            <input type="text" id="ali-empresa1-total" readonly>
                        </div>
                        <div class="form-group">
                            <label for="ali-empresa1-selecionada">Selecionar Empresa</label>
                            <input type="radio" name="ali-empresa-selecionada" id="ali-empresa1-selecionada" value="1" onchange="mostrarJustificativa('ali', 1)">
                        </div>
                    </div>
                    <div class="empresa">
                        <h4>Empresa 2</h4>
                        <div class="form-group">
                            <label for="ali-empresa2-nome">Nome</label>
                            <input type="text" id="ali-empresa2-nome" placeholder="Nome da empresa">
                        </div>
                        <div class="form-group">
                            <label for="ali-empresa2-cnpj">CNPJ</label>
                            <input type="text" id="ali-empresa2-cnpj" placeholder="00.000.000/0000-00">
                            <span id="srv-empresa2-status" class="status-cnpj"></span>
                        </div>
                        <div class="form-group">
                            <label for="ali-empresa2-link">Link</label>
                            <input type="url" id="ali-empresa2-link" placeholder="https://...">
                        </div>
                        <div class="form-group">
                            <label for="ali-empresa2-unitario">Valor Unitário (R$)</label>
                            <input type="text" id="ali-empresa2-unitario" class="valor-monetario" placeholder="0,00">
                        </div>
                        <div class="form-group">
                            <label for="ali-empresa2-total">Valor Total (R$)</label>
                            <input type="text" id="ali-empresa2-total" readonly>
                        </div>
                        <div class="form-group">
                            <label for="ali-empresa2-selecionada">Selecionar Empresa</label>
                            <input type="radio" name="ali-empresa-selecionada" id="ali-empresa2-selecionada" value="2" onchange="mostrarJustificativa('ali', 2)">
                        </div>
                    </div>
                    <div class="empresa">
                        <h4>Empresa 3</h4>
                        <div class="form-group">
                            <label for="ali-empresa3-nome">Nome</label>
                            <input type="text" id="ali-empresa3-nome" placeholder="Nome da empresa">
                        </div>
                        <div class="form-group">
                            <label for="ali-empresa3-cnpj">CNPJ</label>
                            <input type="text" id="ali-empresa3-cnpj" placeholder="00.000.000/0000-00">
                            <span id="srv-empresa3-status" class="status-cnpj"></span>
                        </div>
                        <div class="form-group">
                            <label for="ali-empresa3-link">Link</label>
                            <input type="url" id="ali-empresa3-link" placeholder="https://...">
                        </div>
                        <div class="form-group">
                            <label for="ali-empresa3-unitario">Valor Unitário (R$)</label>
                            <input type="text" id="ali-empresa3-unitario" class="valor-monetario" placeholder="0,00">
                        </div>
                        <div class="form-group">
                            <label for="ali-empresa3-total">Valor Total (R$)</label>
                            <input type="text" id="ali-empresa3-total" readonly>
                        </div>
                        <div class="form-group">
                            <label for="ali-empresa3-selecionada">Selecionar Empresa</label>
                            <input type="radio" name="ali-empresa-selecionada" id="ali-empresa3-selecionada" value="3" onchange="mostrarJustificativa('ali', 3)">
                        </div>
                    </div>
                </div>
                <div class="form-group" style="margin-top: 20px;">
                    <label for="ali-menor-valor">Menor Valor Cotado (R$)</label>
                    <input type="text" id="ali-menor-valor" readonly>
                </div>
                <div class="form-group" id="ali-justificativa-container" style="display: none;">
                    <label for="ali-justificativa">Justificativa</label>
                    <textarea id="ali-justificativa" placeholder="Justifique a escolha de uma empresa com valor superior ao menor cotado"></textarea>
                </div>
                <button class="btn btn-success" id="ali-adicionar-carrinho">Adicionar ao Carrinho</button>
            </div>
        </div>

        <!-- Carrinho -->
        <div class="carrinho">
            <h3>Carrinho de Compras</h3>
            <div id="lista-carrinho" class="carrinho-vazio">
                Nenhum item adicionado ao carrinho
            </div>
            <div id="total-carrinho" class="total-carrinho">
                Total no Carrinho: R$ 0,00
            </div>
            <div class="declaracao-container">
                <label>
                    <input type="checkbox" id="declaracao-checkbox">
                    Declaro que os custos aqui registrados estão em estrita conformidade aos orçamentos apresentados para fins de comprovação dos valores estimados de cada item.
                </label>
            </div>
            <div class="acoes-carrinho">
                <button class="btn" id="btn-exportar-excel" disabled>Gerar Excel</button>
            </div>
        </div>
    </div>

    <footer class="footer">
        © 2025 Ministério do Esporte - Todos os direitos reservados
    </footer>

    <script>

    document.addEventListener('DOMContentLoaded', function() {
        function formatarMoeda(valor) {
        valor = valor.replace(/\D/g, '');
        valor = (parseInt(valor) / 100).toFixed(2).replace('.', ',').replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1.');
        return `R$ ${valor}`;
    }

    function aplicarMascaraMoeda(campo) {
        campo.addEventListener('input', (e) => {
            e.target.value = formatarMoeda(e.target.value);
        });
    }

        // Aplicar máscara nos campos de valor unitário
        document.querySelectorAll('.valor-monetario').forEach(campo => {
        aplicarMascaraMoeda(campo);
    });

    if (typeof XLSX === 'undefined') {
        alert('Erro: A biblioteca SheetJS não foi carregada.');
        return;
    }

    // Cache para armazenar dados das empresas entre adições
    let empresasCache = {
        srv: [{}, {}, {}],
        me: [{}, {}, {}],
        uni: [{}, {}, {}],
        idv: [{}, {}, {}],
        ali: [{}, {}, {}]
    };

    let dadosPlanilha = {
        material: [],
        servicos: [],
        locacao: [],
        uniforme: [],
        impressos: [],
        alimentacao: []
    };

    const categoriasMap = {
        'Material': 'material',
        'Serviços': 'servicos',
        'Locação': 'locacao',
        'Uniforme': 'uniforme',
        'Impresso': 'impressos',
        'Alimentação': 'alimentacao'
    };

    const itensAlimentacao = [
        'ÁGUA',
        'ÁGUA MINERAL',
        'ALIMENTAÇÃO - ALMOÇO/JANTA (MARMITEX)',
        'ALIMENTAÇÃO - KIT LANCHE'
    ];

    async function carregarPlanilha() {
        try {
            const response = await fetch('data/Base_Dados.xlsx');
            if (!response.ok) {
                console.warn(`Erro ao carregar Base_Dados.xlsx: ${response.statusText}. Usando dados mock.`);
                inicializarDadosMock();
                return;
            }
            const data = await response.arrayBuffer();
            const workbook = XLSX.read(data, { type: 'array' });
            Object.keys(categoriasMap).forEach(aba => {
                const sheet = workbook.Sheets[aba];
                if (!sheet) return;
                const jsonData = XLSX.utils.sheet_to_json(sheet, { header: ['ITEM', 'SUBITEM'] }).slice(1);
                const categoria = categoriasMap[aba];
                jsonData.forEach(row => {
                    if (!row.ITEM || !row.SUBITEM) return;
                    if ((aba === 'Material' || aba === 'Locação') && itensAlimentacao.includes(row.ITEM.toUpperCase())) {
                        dadosPlanilha.alimentacao.push(row);
                    } else {
                        dadosPlanilha[categoria].push(row);
                    }
                });
                dadosPlanilha[categoria].push({ ITEM: 'Outros', SUBITEM: 'Especifique' });
            });
            inicializarSelects();
        } catch (error) {
            console.error('Erro ao carregar a planilha:', error);
            inicializarDadosMock();
        }
    }

    function inicializarDadosMock() {
        dadosPlanilha.servicos = [
            { ITEM: 'Coordenador de eventos', SUBITEM: 'Gestão' },
            { ITEM: 'Professor', SUBITEM: 'Aulas práticas' },
            { ITEM: 'Professor de Educação Física', SUBITEM: 'Aulas de educação física' },
            { ITEM: 'Outros', SUBITEM: 'Especifique' }
        ];
        dadosPlanilha.material = [
            { ITEM: 'Bola de futebol', SUBITEM: 'Tamanho 5' },
            { ITEM: 'Rede', SUBITEM: 'Volei' },
            { ITEM: 'Outros', SUBITEM: 'Especifique' }
        ];
        dadosPlanilha.uniforme = [
            { ITEM: 'Camiseta', SUBITEM: 'Adulto' },
            { ITEM: 'Calção', SUBITEM: 'Juvenil' },
            { ITEM: 'Outros', SUBITEM: 'Especifique' }
        ];
        dadosPlanilha.impressos = [
            { ITEM: 'Banner', SUBITEM: '1x2m' },
            { ITEM: 'Flyer', SUBITEM: 'A5' },
            { ITEM: 'Outros', SUBITEM: 'Especifique' }
        ];
        dadosPlanilha.alimentacao = [
            { ITEM: 'Água', SUBITEM: '500ml' },
            { ITEM: 'Kit Lanche', SUBITEM: 'Pão e suco' },
            { ITEM: 'Outros', SUBITEM: 'Especifique' }
        ];
        inicializarSelects();
    }

    function inicializarSelects() {
        const cargoSelect = document.getElementById('srv-cargo');
        const dados = dadosPlanilha.servicos;
        const itensUnicos = [...new Set(dados.map(row => row.ITEM))];
        cargoSelect.innerHTML = '<option value="">Selecione um cargo</option>' +
            itensUnicos.map(item => `<option value="${item}">${item}</option>`).join('');
    }

    const prefixoToCategoria = {
        'srv': 'servicos',
        'me': 'material',
        'uni': 'uniforme',
        'idv': 'impressos',
        'ali': 'alimentacao'
    };

    window.filtrarItens = function(prefixo) {
        const input = document.getElementById(`${prefixo}-item`);
        const suggestions = document.getElementById(`${prefixo}-item-suggestions`);
        const categoria = prefixoToCategoria[prefixo];
        const dados = dadosPlanilha[categoria];
        const query = input.value.toLowerCase();
        if (query.length < 1) {
            suggestions.style.display = 'none';
            return;
        }
        const itensUnicos = [...new Set(dados.map(row => row.ITEM))].filter(item =>
            item && item.toLowerCase().includes(query)
        );
        suggestions.innerHTML = itensUnicos.map(item =>
            `<div class="suggestion-item" onclick="selecionarItem('${prefixo}', '${item.replace(/'/g, "\\'")}')">${item}</div>`
        ).join('');
        suggestions.style.display = itensUnicos.length ? 'block' : 'none';
    };

    window.selecionarItem = function(prefixo, item) {
        const input = document.getElementById(`${prefixo}-item`);
        const suggestions = document.getElementById(`${prefixo}-item-suggestions`);
        const subitemInput = document.getElementById(`${prefixo}-subitem`);
        const outrosContainer = document.getElementById(`${prefixo}-outros-container`);
        input.value = item;
        subitemInput.value = '';
        suggestions.style.display = 'none';
        outrosContainer.style.display = item === 'Outros' ? 'block' : 'none';
        filtrarSubitens(prefixo);
        subitemInput.focus();
    };

    window.filtrarSubitens = function(prefixo) {
        const itemInput = document.getElementById(`${prefixo}-item`).value;
        const subitemInput = document.getElementById(`${prefixo}-subitem`);
        const suggestions = document.getElementById(`${prefixo}-subitem-suggestions`);
        const categoria = prefixoToCategoria[prefixo];
        const dados = dadosPlanilha[categoria];
        const query = subitemInput.value.toLowerCase();
        if (!itemInput) {
            suggestions.style.display = 'none';
            return;
        }
        const subitens = dados.filter(row =>
            row.ITEM === itemInput && row.SUBITEM && row.SUBITEM.toLowerCase().includes(query)
        );
        suggestions.innerHTML = subitens.map(row =>
            `<div class="suggestion-item" onclick="selecionarSubitem('${prefixo}', '${row.SUBITEM.replace(/'/g, "\\'")}')">${row.SUBITEM}</div>`
        ).join('');
        suggestions.style.display = subitens.length ? 'block' : 'none';
    };

    window.selecionarSubitem = function(prefixo, subitem) {
        const subitemInput = document.getElementById(`${prefixo}-subitem`);
        const suggestions = document.getElementById(`${prefixo}-subitem-suggestions`);
        subitemInput.value = subitem;
        suggestions.style.display = 'none';
    };

    window.toggleOutrosField = function(prefixo) {
        const cargoSelect = document.getElementById(`${prefixo}-cargo`);
        const outrosContainer = document.getElementById(`${prefixo}-outros-container`);
        outrosContainer.style.display = cargoSelect.value === 'Outros' ? 'block' : 'none';
    };

    window.toggleLocacaoFields = function() {
        const tipo = document.getElementById('me-tipo').value;
        const periodoContainer = document.getElementById('me-periodo-container');
        const periodoValorContainer = document.getElementById('me-periodo-valor-container');
        const periodoSelect = document.getElementById('me-periodo');

        if (tipo === 'aquisicao') {
            periodoContainer.style.display = 'none';
            periodoValorContainer.style.display = 'none';
            periodoSelect.value = '';
            document.getElementById('me-periodo-valor').value = '1';
        } else {
            periodoContainer.style.display = 'block';
            periodoValorContainer.style.display = 'block';
            periodoSelect.innerHTML = `
                <option value="diarias">Diárias</option>
                <option value="meses">Meses</option>
                <option value="UN">UN</option>
                <option value="Kit">Kit</option>
            `;
            periodoSelect.value = 'diarias';
        }
        calcularTotal('me');
    };

    window.mostrarJustificativa = function(prefixo, empresaIndex) {
    // Obter o menor valor cotado
    const menorValorInput = document.getElementById(`${prefixo}-menor-valor`);
    let menorValor = 0;
    if (menorValorInput && menorValorInput.value) {
        menorValor = parseValorMonetario(menorValorInput.value) || 0;
    }

    // Obter o valor total da empresa selecionada
    const valorSelecionadoInput = document.getElementById(`${prefixo}-empresa${empresaIndex}-total`);
    let valorSelecionado = 0;
    if (valorSelecionadoInput && valorSelecionadoInput.value) {
        valorSelecionado = parseValorMonetario(valorSelecionadoInput.value) || 0;
    }

    // Exibir ou ocultar o campo de justificativa
    const justificativaContainer = document.getElementById(`${prefixo}-justificativa-container`);
    if (justificativaContainer) {
        justificativaContainer.style.display = (valorSelecionado > menorValor && menorValor > 0) ? 'block' : 'none';
    }
};

    // Carregar e limpar os dados do sessionStorage
let numeroProposta = sessionStorage.getItem('numeroProposta') || 'sem-numero';
const cnpj = sessionStorage.getItem('cnpj') || '';
const nomeEntidade = sessionStorage.getItem('nomeEntidade') || '';
const valorEmenda = parseFloat(sessionStorage.getItem('valorEmenda')) || 1000000;

// Limpar sessionStorage após carregar os dados
sessionStorage.removeItem('numeroProposta');
sessionStorage.removeItem('cnpj');
sessionStorage.removeItem('nomeEntidade');
sessionStorage.removeItem('valorEmenda');

    numeroProposta = numeroProposta.replace(/[^a-zA-Z0-9_-]/g, '_');
    document.getElementById('valor-total').textContent = formatarMoeda(valorEmenda);
    document.getElementById('valor-restante').textContent = formatarMoeda(valorEmenda);

    // Inicializar carrinho e variáveis relacionadas a partir do localStorage
    let carrinho = JSON.parse(localStorage.getItem('carrinho')) || [];
    let valorGasto = parseFloat(localStorage.getItem('valorGasto')) || 0;
    let itemIdCounter = parseInt(localStorage.getItem('itemIdCounter')) || 1;

    const declaracaoCheckbox = document.getElementById('declaracao-checkbox');
    const btnExportarExcel = document.getElementById('btn-exportar-excel');

    function formatarMoeda(valor) {
        const numericValor = parseFloat(valor) || 0;
        return `R$ ${numericValor.toLocaleString('pt-BR', {
            minimumFractionDigits: 2,
            maximumFractionDigits: 2
        })}`;
    }

    function formatarCNPJ(cnpj) {
        cnpj = cnpj.replace(/\D/g, '');
        if (cnpj.length <= 14) {
            if (cnpj.length > 2) cnpj = cnpj.substring(0, 2) + '.' + cnpj.substring(2);
            if (cnpj.length > 6) cnpj = cnpj.substring(0, 6) + '.' + cnpj.substring(6);
            if (cnpj.length > 10) cnpj = cnpj.substring(0, 10) + '/' + cnpj.substring(10);
            if (cnpj.length > 15) cnpj = cnpj.substring(0, 15) + '-' + cnpj.substring(15);
            return cnpj.substring(0, 18);
        }
        return cnpj;
    }

    function parseValorMonetario(inputValue) {
        if (!inputValue) return 0;
        let value = inputValue.replace(/[^\d,.]/g, '');
        const cleanedValue = value
            .replace(/\.(?=.*\.)|,/g, (m) => m === ',' ? '.' : '')
            .replace(/^0+(?=\d)/, '');
        return parseFloat(cleanedValue) || 0;
    }

    function calcularTotal(prefixo) {
        const quantidadeInput = document.getElementById(`${prefixo}-quantidade`);
        const periodoValorInput = document.getElementById(`${prefixo}-periodo-valor`);
        const totalInput = document.getElementById(`${prefixo}-total`);
        const quantidade = parseInt(quantidadeInput.value) || 0;
        let total = quantidade;
        if (prefixo === 'me' && document.getElementById('me-tipo').value === 'locacao') {
            const periodoValor = parseInt(periodoValorInput.value) || 0;
            total = quantidade * periodoValor;
        } else if (prefixo !== 'me') {
            const periodoValor = parseInt(periodoValorInput.value) || 0;
            total = quantidade * periodoValor;
        }
        totalInput.value = total;
        calcularTotaisEmpresas(prefixo);
        return total;
    }

    function calcularTotaisEmpresas(prefixo) {
    const total = parseInt(document.getElementById(`${prefixo}-total`).value) || 0;
    let menorValor = Infinity;
    for (let i = 1; i <= 3; i++) {
        const unitarioInput = document.getElementById(`${prefixo}-empresa${i}-unitario`);
        if (!unitarioInput) continue;
        const unitario = parseFloat(unitarioInput.getAttribute('data-value') || '0') || 0;
        const valorTotal = unitario * total;
        const valorTotalFormatado = formatarMoeda(valorTotal);
        const totalInput = document.getElementById(`${prefixo}-empresa${i}-total`);
        if (totalInput) {
            totalInput.value = valorTotalFormatado;
        }
        if (valorTotal < menorValor && valorTotal > 0) {
            menorValor = valorTotal;
        }
    }
    const menorValorInput = document.getElementById(`${prefixo}-menor-valor`);
    if (menorValorInput) {
        menorValorInput.value = menorValor !== Infinity ? formatarMoeda(menorValor) : 'R$ 0,00';
    }
    console.log(`[${prefixo}] Menor valor calculado: ${menorValor}`); // Log para depuração
    return menorValor !== Infinity ? menorValor : 0;
}

    const tabs = document.querySelectorAll('.tab');
    tabs.forEach(tab => {
        tab.addEventListener('click', function() {
            tabs.forEach(t => t.classList.remove('active'));
            this.classList.add('active');
            const tabId = this.getAttribute('data-tab');
            document.querySelectorAll('.tab-content').forEach(content => {
                content.classList.remove('active');
            });
            document.getElementById(tabId).classList.add('active');
        });
    });

    // Função para consultar o CNPJ
    async function consultarCNPJ(prefixo, empresaIndex) {
    const cnpjInput = document.getElementById(`${prefixo}-empresa${empresaIndex}-cnpj`);
    const statusSpan = document.getElementById(`${prefixo}-empresa${empresaIndex}-status`);
    const cnpj = cnpjInput.value.replace(/[^\d]/g, '');

    // Validar formato do CNPJ
    if (cnpj.length !== 14 || !validarCNPJ(cnpj)) {
        statusSpan.textContent = 'CNPJ inválido';
        statusSpan.className = 'status-cnpj erro';
        return;
    }

    try {
        statusSpan.textContent = 'Consultando...';
        statusSpan.className = 'status-cnpj';

        // Use ReceitaWS API instead of BrasilAPI
        const response = await fetch(`https://receitaws.com.br/v1/cnpj/${cnpj}`);
        if (!response.ok) {
            throw new Error(`Erro na API: ${response.statusText}`);
        }

        const data = await response.json();

        // Log the full API response and relevant fields for debugging
        console.log('Full API Response:', data);
        console.log('status:', data.status);
        console.log('situacao:', data.situacao);

        // Check for API error status
        if (data.status === 'ERROR') {
            throw new Error(data.message || 'Erro na consulta da API');
        }

        // Safely handle situacao (ReceitaWS uses 'situacao', not 'situacao_cadastral')
        const situacao = data.situacao 
            ? String(data.situacao).toLowerCase() 
            : null;

        // Define explicitly inactive statuses
        const inactiveStatuses = ['inapta', 'suspensa', 'baixada', 'nula'];

        if (!situacao) {
            // If situacao is missing, show an error
            statusSpan.textContent = 'Situação desconhecida';
            statusSpan.className = 'status-cnpj erro';
        } else if (inactiveStatuses.includes(situacao)) {
            // If explicitly inactive, mark as Inativa
            statusSpan.textContent = 'Inativa';
            statusSpan.className = 'status-cnpj';
        } else {
            // If not explicitly inactive, assume Active
            statusSpan.textContent = 'Ativa';
            statusSpan.className = 'status-cnpj ativa';
            const nomeInput = document.getElementById(`${prefixo}-empresa${empresaIndex}-nome`);
            if (!nomeInput.value) {
                nomeInput.value = data.nome || ''; // ReceitaWS uses 'nome' instead of 'razao_social'
            }
        }
    } catch (error) {
        console.error('Erro ao consultar CNPJ:', error);
        statusSpan.textContent = 'Erro na consulta';
        statusSpan.className = 'status-cnpj erro';
    }
}
// Função de debounce para evitar múltiplas requisições enquanto digita
function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
        const later = () => {
            clearTimeout(timeout);
            func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
}

    const prefixes = ['srv', 'me', 'uni', 'idv', 'ali'];
    prefixes.forEach(prefixo => {
        const quantidadeInput = document.getElementById(`${prefixo}-quantidade`);
        const periodoValorInput = document.getElementById(`${prefixo}-periodo-valor`);
        if (quantidadeInput) {
            quantidadeInput.addEventListener('input', () => calcularTotal(prefixo));
        }
        if (periodoValorInput) {
            periodoValorInput.addEventListener('input', () => calcularTotal(prefixo));
        }
        if (prefixo === 'me') {
            const tipoSelect = document.getElementById('me-tipo');
            if (tipoSelect) {
                tipoSelect.addEventListener('change', () => calcularTotal(prefixo));
            }
        }
        for (let i = 1; i <= 3; i++) {
            const cnpjInput = document.getElementById(`${prefixo}-empresa${i}-cnpj`);
            if (cnpjInput) {
                cnpjInput.addEventListener('input', function(e) {
                    e.target.value = formatarCNPJ(e.target.value);
                });
            }
        }
    });

    document.querySelectorAll('.valor-monetario').forEach(input => {
        input.addEventListener('input', function(e) {
            let cursorPosition = e.target.selectionStart;
            let value = e.target.value;
            value = value.replace(/[^0-9,.]/g, '');
            const parts = value.split(/[,.]/);
            if (parts.length > 2) {
                value = parts[0] + ',' + parts[1];
            }
            e.target.value = value;
            let numericValue = parseFloat(value.replace(',', '.')) || 0;
            if (parts.length > 1) {
                const decimals = parts[1].slice(0, 2);
                numericValue = parseFloat(`${parts[0]}.${decimals}`) || 0;
            }
            e.target.setAttribute('data-value', numericValue.toString());
            e.target.selectionStart = e.target.selectionEnd = cursorPosition;
            const id = e.target.id;
            if (id.includes('unitario')) {
                const prefixo = id.split('-')[0];
                calcularTotaisEmpresas(prefixo);
            }
        });

        input.addEventListener('blur', function(e) {
            let numericValue = parseFloat(e.target.getAttribute('data-value') || '0') || 0;
            e.target.value = numericValue.toLocaleString('pt-BR', {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            });
        });

        input.addEventListener('keydown', function(e) {
            if (['Backspace', 'Delete', 'ArrowLeft', 'ArrowRight', 'Tab', 'Home', 'End'].includes(e.key)) {
                return;
            }
            if (!/[\d,.]/.test(e.key) && e.key.length === 1) {
                e.preventDefault();
            }
        });
    });

    prefixes.forEach(prefixo => {
        const btnAdicionar = document.getElementById(`${prefixo}-adicionar-carrinho`);
        if (!btnAdicionar) return;
        btnAdicionar.addEventListener('click', function() {
            const cargoOuItem = prefixo === 'srv'
                ? (document.getElementById(`${prefixo}-cargo`).value === 'Outros'
                    ? document.getElementById(`${prefixo}-outros`).value.trim()
                    : document.getElementById(`${prefixo}-cargo`).value.trim())
                : document.getElementById(`${prefixo}-item`).value.trim();
            const subitem = prefixo !== 'srv'
                ? (document.getElementById(`${prefixo}-item`).value === 'Outros'
                    ? document.getElementById(`${prefixo}-outros`).value.trim()
                    : document.getElementById(`${prefixo}-subitem`).value.trim())
                : null;
            const descricao = document.getElementById(`${prefixo}-descricao`).value.trim();
            const quantidade = parseInt(document.getElementById(`${prefixo}-quantidade`).value) || 0;
            const periodo = prefixo === 'me' && document.getElementById('me-tipo').value === 'aquisicao'
                ? 'aquisicao'
                : document.getElementById(`${prefixo}-periodo`)?.value || 'diarias';
            const periodoValor = prefixo === 'me' && document.getElementById('me-tipo').value === 'aquisicao'
                ? 1
                : parseInt(document.getElementById(`${prefixo}-periodo-valor`)?.value) || 0;
            const tipo = prefixo === 'me' ? document.getElementById('me-tipo').value : null;
            const total = tipo === 'aquisicao' ? quantidade : quantidade * periodoValor;

            if (!cargoOuItem || !descricao || quantidade <= 0 || (tipo !== 'aquisicao' && periodoValor <= 0)) {
                alert('Preencha todos os campos obrigatórios (item/cargo, descrição, quantidade, período)!');
                return;
            }

            if (prefixo !== 'srv' && !subitem && !descricao) {
                alert('Preencha pelo menos o subitem ou a descrição do item!');
                return;
            }

            const empresas = [];
            let menorValor = Infinity;
            let empresaSelecionada = null;
            const selecionada = document.querySelector(`input[name="${prefixo}-empresa-selecionada"]:checked`);

            for (let i = 1; i <= 3; i++) {
                const nome = document.getElementById(`${prefixo}-empresa${i}-nome`).value.trim();
                const cnpj = document.getElementById(`${prefixo}-empresa${i}-cnpj`).value.trim();
                const link = document.getElementById(`${prefixo}-empresa${i}-link`).value.trim();
                const unitarioInput = document.getElementById(`${prefixo}-empresa${i}-unitario`);
                const unitario = parseFloat(unitarioInput.getAttribute('data-value') || '0') || 0;
                const valorTotal = unitario * total;

                empresasCache[prefixo][i-1] = { nome, cnpj, link };

                if (nome && cnpj && unitario > 0) {
                    if (!validarCNPJ(cnpj)) {
                        alert(`CNPJ inválido para Empresa ${i} na seção ${prefixo.toUpperCase()}.`);
                        return;
                    }
                    empresas.push({
                        nome,
                        cnpj,
                        link: link || '',
                        unitario,
                        total: valorTotal
                    });

                    if (valorTotal < menorValor && valorTotal > 0) {
                        menorValor = valorTotal;
                    }

                    if (selecionada && parseInt(selecionada.value) === i) {
                        empresaSelecionada = {
                            nome,
                            cnpj,
                            link: link || '',
                            unitario,
                            total: valorTotal
                        };
                    }
                } else {
                    empresas.push({ nome: '', cnpj: '', link: '', unitario: 0, total: 0 });
                }
            }

            if (empresas.filter(e => e.nome && e.cnpj && e.unitario > 0).length < 1) {
                alert('Preencha pelo menos uma empresa com nome, CNPJ e valor unitário válidos!');
                return;
            }

            if (!empresaSelecionada) {
                alert('Selecione uma empresa antes de adicionar ao carrinho!');
                return;
            }

            const justificativa = empresaSelecionada.total > menorValor && menorValor !== Infinity
                ? document.getElementById(`${prefixo}-justificativa`).value.trim()
                : '';

            if (empresaSelecionada.total > menorValor && menorValor !== Infinity && !justificativa) {
                alert('Por favor, forneça uma justificativa para a escolha de uma empresa com valor superior ao menor cotado.');
                return;
            }

            const itemCarrinho = {
                id: itemIdCounter++,
                categoria: prefixoToCategoria[prefixo],
                item: cargoOuItem,
                subitem: subitem || '',
                descricao,
                quantidade,
                periodo: tipo === 'aquisicao' ? 'N/A' : periodo,
                periodoValor: tipo === 'aquisicao' ? 1 : periodoValor,
                tipo: tipo || 'N/A',
                total,
                empresas,
                empresaSelecionada,
                justificativa,
                dataAdicao: new Date().toISOString()
            };

            carrinho.push(itemCarrinho);
            valorGasto += empresaSelecionada.total;
            atualizarCarrinho();
            limparFormulario(prefixo);
        });
    });

    function validarCNPJ(cnpj) {
    cnpj = cnpj.replace(/[^\d]/g, '');
    
    if (cnpj.length !== 14 || /^(\d)\1+$/.test(cnpj)) 
        return false;
    let tamanho = cnpj.length - 2;
    let numeros = cnpj.substring(0, tamanho);
    let digitos = cnpj.substring(tamanho);
    let soma = 0;
    let pos = tamanho - 7;
    for (let i = tamanho; i >= 1; i--) {
        soma += numeros.charAt(tamanho - i) * pos--;
        if (pos < 2) pos = 9;
    }
    let resultado = soma % 11 < 2 ? 0 : 11 - (soma % 11);
    if (resultado != digitos.charAt(0)) return false;
    tamanho++;
    numeros = cnpj.substring(0, tamanho);
    soma = 0;
    pos = tamanho - 7;
    for (let i = tamanho; i >= 1; i--) {
        soma += numeros.charAt(tamanho - i) * pos--;
        if (pos < 2) pos = 9;
    }
    resultado = soma % 11 < 2 ? 0 : 11 - (soma % 11);
    if (resultado != digitos.charAt(1)) return false;
    return true;
}

async function consultarCNPJ(prefixo, empresaIndex) {
    const cnpjInput = document.getElementById(`${prefixo}-empresa${empresaIndex}-cnpj`);
    const statusSpan = document.getElementById(`${prefixo}-empresa${empresaIndex}-status`);
    const cnpj = cnpjInput.value.replace(/[^\d]/g, '');

    // Validar formato do CNPJ
    if (cnpj.length !== 14 || !validarCNPJ(cnpj)) {
        statusSpan.textContent = 'CNPJ inválido';
        statusSpan.className = 'status-cnpj erro';
        return;
    }

    try {
        statusSpan.textContent = 'Consultando...';
        statusSpan.className = 'status-cnpj';

        // Use ReceitaWS API instead of BrasilAPI
        const response = await fetch(`https://receitaws.com.br/v1/cnpj/${cnpj}`);
        if (!response.ok) {
            throw new Error(`Erro na API: ${response.statusText}`);
        }

        const data = await response.json();

        // Log the full API response and relevant fields for debugging
        console.log('Full API Response:', data);
        console.log('status:', data.status);
        console.log('situacao:', data.situacao);

        // Check for API error status
        if (data.status === 'ERROR') {
            throw new Error(data.message || 'Erro na consulta da API');
        }

        // Safely handle situacao (ReceitaWS uses 'situacao', not 'situacao_cadastral')
        const situacao = data.situacao 
            ? String(data.situacao).toLowerCase() 
            : null;

        // Define explicitly inactive statuses
        const inactiveStatuses = ['inapta', 'suspensa', 'baixada', 'nula'];

        if (!situacao) {
            // If situacao is missing, show an error
            statusSpan.textContent = 'Situação desconhecida';
            statusSpan.className = 'status-cnpj erro';
        } else if (inactiveStatuses.includes(situacao)) {
            // If explicitly inactive, mark as Inativa
            statusSpan.textContent = 'Inativa';
            statusSpan.className = 'status-cnpj inativa';
        } else {
            // If not explicitly inactive, assume Active
            statusSpan.textContent = 'Ativa';
            statusSpan.className = 'status-cnpj ativa';
            const nomeInput = document.getElementById(`${prefixo}-empresa${empresaIndex}-nome`);
            if (!nomeInput.value) {
                nomeInput.value = data.nome || ''; // ReceitaWS uses 'nome' instead of 'razao_social'
            }
        }
    } catch (error) {
        console.error('Erro ao consultar CNPJ:', error);
        statusSpan.textContent = 'Erro na consulta';
        statusSpan.className = 'status-cnpj erro';
    }
}
function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
        const later = () => { clearTimeout(timeout); func(...args); };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
}

const debouncedConsultarCNPJ = debounce(consultarCNPJ, 500);

    function atualizarCarrinho() {
        const listaCarrinho = document.getElementById('lista-carrinho');
        const totalCarrinho = document.getElementById('total-carrinho');
        const valorRestante = valorEmenda - valorGasto;

        if (carrinho.length === 0) {
            listaCarrinho.innerHTML = '<div class="carrinho-vazio">Nenhum item adicionado ao carrinho</div>';
            totalCarrinho.textContent = 'Total no Carrinho: R$ 0,00';
        } else {
            listaCarrinho.innerHTML = carrinho.map(item => `
                <div class="item-carrinho" data-id="${item.id}">
                    <div class="item-carrinho-info">
                        <strong>${item.item}${item.subitem ? ' - ' + item.subitem : ''}</strong><br>
                        ${item.descricao}<br>
                        Quantidade: ${item.quantidade} | 
                        ${item.tipo === 'aquisicao' ? 'Aquisição' : 
                            item.periodo === 'diarias' ? `${item.periodoValor} dia(s)` : 
                            item.periodo === 'meses' ? `${item.periodoValor} mês(es)` : 
                            item.periodo === 'UN' ? `${item.periodoValor} UN` : 
                            item.periodo === 'Kit' ? `${item.periodoValor} Kit` : 'N/A'}<br>
                        Empresa selecionada: ${item.empresaSelecionada.nome} (${formatarMoeda(item.empresaSelecionada.total)})
                    </div>
                    <div class="item-carrinho-acoes">
                        <button onclick="editarItemCarrinho(${item.id})"><i class="fas fa-edit"></i> Editar</button>
                        <button onclick="removerItemCarrinho(${item.id})"><i class="fas fa-trash"></i> Remover</button>
                    </div>
                </div>
            `).join('');

            totalCarrinho.textContent = `Total no Carrinho: ${formatarMoeda(valorGasto)}`;
        }

        document.getElementById('valor-gasto').textContent = formatarMoeda(valorGasto);
        document.getElementById('valor-restante').textContent = formatarMoeda(valorRestante);

        btnExportarExcel.disabled = carrinho.length === 0 || !declaracaoCheckbox.checked;

        // Salvar no localStorage
        localStorage.setItem('carrinho', JSON.stringify(carrinho));
        localStorage.setItem('valorGasto', valorGasto.toString());
        localStorage.setItem('itemIdCounter', itemIdCounter.toString());
    }

    window.removerItemCarrinho = function(id) {
        const itemIndex = carrinho.findIndex(item => item.id === id);
        if (itemIndex !== -1) {
            valorGasto -= carrinho[itemIndex].empresaSelecionada.total;
            carrinho.splice(itemIndex, 1);
            atualizarCarrinho();
        }
    };
    async function consultarCNPJ(prefixo, empresaIndex) {
    const cnpjInput = document.getElementById(`${prefixo}-empresa${empresaIndex}-cnpj`);
    const statusSpan = document.getElementById(`${prefixo}-empresa${empresaIndex}-status`);
    const cnpj = cnpjInput.value.replace(/[^\d]/g, '');

    // Validar formato do CNPJ
    if (cnpj.length !== 14 || !validarCNPJ(cnpj)) {
        statusSpan.textContent = 'CNPJ inválido';
        statusSpan.className = 'status-cnpj erro';
        return;
    }

    try {
        statusSpan.textContent = 'Consultando...';
        statusSpan.className = 'status-cnpj';

        const response = await fetch(`https://brasilapi.com.br/api/cnpj/v1/${cnpj}`);
        if (!response.ok) {
            throw new Error(`Erro na API: ${response.statusText}`);
        }

        const data = await response.json();

        // Verificação mais robusta da situação cadastral
        const situacao = data.situacao_cadastral ? String(data.situacao_cadastral).toLowerCase() : '';
        const descricaoSituacao = data.descricao_situacao_cadastral ? String(data.descricao_situacao_cadastral).toLowerCase() : '';

        // Verificar se a empresa está ativa (considerando diferentes formas que a API pode retornar)
        if (situacao.includes('ativa') || 
            descricaoSituacao.includes('ativa') || 
            descricaoSituacao.includes('habilitado') || 
            descricaoSituacao.includes('regular') ||
            (data.estabelecimento && data.estabelecimento.situacao_cadastral === 'ATIVA')) {
            
            statusSpan.textContent = 'Ativa';
            statusSpan.className = 'status-cnpj ativa';
            
            // Preencher o nome da empresa automaticamente
            const nomeInput = document.getElementById(`${prefixo}-empresa${empresaIndex}-nome`);
            if (nomeInput && !nomeInput.value) {
                nomeInput.value = data.razao_social || data.nome_fantasia || '';
            }
        } else {
            statusSpan.textContent = 'Inativa';
            statusSpan.className = 'status-cnpj inativa';
        }
    } catch (error) {
        console.error('Erro ao consultar CNPJ:', error);
        statusSpan.textContent = 'Erro na consulta';
        statusSpan.className = 'status-cnpj erro';
    }
}
// Opcional: Consultar automaticamente ao sair do campo CNPJ
prefixes.forEach(prefixo => {
    for (let i = 1; i <= 3; i++) {
        const cnpjInput = document.getElementById(`${prefixo}-empresa${i}-cnpj`);
        if (cnpjInput) {
            cnpjInput.addEventListener('blur', () => {
                consultarCNPJ(prefixo, i);
            });
        }
    }
});

    window.editarItemCarrinho = function(id) {
    const item = carrinho.find(item => item.id === id);
    if (!item) return;

    const prefixoMap = {
        'servicos': 'srv',
        'material': 'me',
        'uniforme': 'uni',
        'impressos': 'idv',
        'alimentacao': 'ali'
    };
    const prefixo = prefixoMap[item.categoria];

    // Selecionar a aba correta
    document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
    document.querySelector(`.tab[data-tab="${item.categoria === 'servicos' ? 'servicos' : item.categoria}"]`).classList.add('active');
    document.querySelectorAll('.tab-content').forEach(c => c.classList.remove('active'));
    document.getElementById(item.categoria === 'servicos' ? 'servicos' : item.categoria).classList.add('active');

    // Preencher os campos do formulário
    if (prefixo === 'srv') {
        if (item.item === 'Outros') {
            document.getElementById(`${prefixo}-cargo`).value = 'Outros';
            document.getElementById(`${prefixo}-outros`).value = item.item;
            document.getElementById(`${prefixo}-outros-container`).style.display = 'block';
        } else {
            document.getElementById(`${prefixo}-cargo`).value = item.item;
            document.getElementById(`${prefixo}-outros`).value = '';
            document.getElementById(`${prefixo}-outros-container`).style.display = 'none';
        }
    } else {
        document.getElementById(`${prefixo}-item`).value = item.item;
        document.getElementById(`${prefixo}-subitem`).value = item.subitem;
        document.getElementById(`${prefixo}-outros`).value = item.item === 'Outros' ? item.subitem : '';
        document.getElementById(`${prefixo}-outros-container`).style.display = item.item === 'Outros' ? 'block' : 'none';
    }

    document.getElementById(`${prefixo}-descricao`).value = item.descricao;
    document.getElementById(`${prefixo}-quantidade`).value = item.quantidade;
    if (prefixo === 'me') {
        document.getElementById(`${prefixo}-tipo`).value = item.tipo;
        toggleLocacaoFields();
    }
    if (item.periodo !== 'N/A') {
        document.getElementById(`${prefixo}-periodo`).value = item.periodo;
        document.getElementById(`${prefixo}-periodo-valor`).value = item.periodoValor;
    }

    // Preencher o campo "Total" e garantir que os cálculos sejam atualizados
    document.getElementById(`${prefixo}-total`).value = item.total || 0; // Preencher o campo "Total"
    calcularTotal(prefixo); // Recalcular para garantir consistência

    // Preencher os campos das empresas
    for (let i = 0; i < 3; i++) {
        const empresa = item.empresas[i] || {};
        document.getElementById(`${prefixo}-empresa${i+1}-nome`).value = empresa.nome || '';
        document.getElementById(`${prefixo}-empresa${i+1}-cnpj`).value = empresa.cnpj || '';
        document.getElementById(`${prefixo}-empresa${i+1}-link`).value = empresa.link || '';
        const unitarioInput = document.getElementById(`${prefixo}-empresa${i+1}-unitario`);
        const unitarioValue = empresa.unitario || 0;
        unitarioInput.value = unitarioValue ? unitarioValue.toLocaleString('pt-BR', { minimumFractionDigits: 2 }) : '0,00';
        unitarioInput.setAttribute('data-value', unitarioValue.toString());
        document.getElementById(`${prefixo}-empresa${i+1}-total`).value = empresa.total ? formatarMoeda(empresa.total) : 'R$ 0,00';
        document.getElementById(`${prefixo}-empresa${i+1}-selecionada`).checked = item.empresaSelecionada && item.empresaSelecionada.nome === empresa.nome;
    }

    document.getElementById(`${prefixo}-justificativa`).value = item.justificativa || '';
    document.getElementById(`${prefixo}-justificativa-container`).style.display = item.justificativa ? 'block' : 'none';
    calcularTotaisEmpresas(prefixo); // Recalcular os totais das empresas

    valorGasto -= item.empresaSelecionada.total;
    carrinho = carrinho.filter(i => i.id !== id);
    atualizarCarrinho();
};

    function limparFormulario(prefixo) {
        if (prefixo === 'srv') {
            document.getElementById(`${prefixo}-cargo`).value = '';
            document.getElementById(`${prefixo}-outros`).value = '';
            document.getElementById(`${prefixo}-outros-container`).style.display = 'none';
        } else {
            document.getElementById(`${prefixo}-item`).value = '';
            document.getElementById(`${prefixo}-subitem`).value = '';
            document.getElementById(`${prefixo}-outros`).value = '';
            document.getElementById(`${prefixo}-outros-container`).style.display = 'none';
        }

        document.getElementById(`${prefixo}-descricao`).value = '';
        document.getElementById(`${prefixo}-quantidade`).value = '1';
        document.getElementById(`${prefixo}-periodo`).value = 'diarias';
        document.getElementById(`${prefixo}-periodo-valor`).value = '1';
        document.getElementById(`${prefixo}-total`).value = '';
        document.getElementById(`${prefixo}-justificativa`).value = '';
        document.getElementById(`${prefixo}-justificativa-container`).style.display = 'none';
        document.getElementById(`${prefixo}-menor-valor`).value = '';

        if (prefixo === 'me') {
            const periodoSelect = document.getElementById('me-periodo');
            periodoSelect.innerHTML = `
                <option value="diarias">Diárias</option>
                <option value="meses">Meses</option>
                <option value="UN">UN</option>
                <option value="Kit">Kit</option>
            `;
            periodoSelect.value = 'diarias';
            document.getElementById('me-tipo').value = 'aquisicao';
            toggleLocacaoFields();
        }

        for (let i = 1; i <= 3; i++) {
            const empresa = empresasCache[prefixo][i-1] || {};
            document.getElementById(`${prefixo}-empresa${i}-nome`).value = empresa.nome || '';
            document.getElementById(`${prefixo}-empresa${i}-cnpj`).value = empresa.cnpj || '';
            document.getElementById(`${prefixo}-empresa${i}-link`).value = empresa.link || '';
            const unitarioInput = document.getElementById(`${prefixo}-empresa${i}-unitario`);
            unitarioInput.value = '0,00';
            unitarioInput.setAttribute('data-value', '0');
            document.getElementById(`${prefixo}-empresa${i}-total`).value = 'R$ 0,00';
            document.getElementById(`${prefixo}-empresa${i}-selecionada`).checked = false;
        }
    }

    declaracaoCheckbox.addEventListener('change', function() {
        btnExportarExcel.disabled = carrinho.length === 0 || !this.checked;
    });

    btnExportarExcel.addEventListener('click', function() {
        if (carrinho.length === 0) {
            alert('O carrinho está vazio. Adicione itens antes de exportar.');
            return;
        }

        if (!declaracaoCheckbox.checked) {
            alert('Você precisa marcar a declaração antes de exportar.');
            return;
        }

        gerarExcel();
    });

    async function gerarExcel() {
        try {
            if (carrinho.length === 0) {
                alert('O carrinho está vazio. Adicione itens antes de exportar.');
                return;
            }

            if (!declaracaoCheckbox.checked) {
                alert('Você precisa marcar a declaração antes de exportar.');
                return;
            }


            const workbook = new ExcelJS.Workbook();
            workbook.creator = 'Ministério do Esporte';
            workbook.lastModifiedBy = 'Sistema de Precificação';
            workbook.created = new Date();
            workbook.modified = new Date();

            const worksheet = workbook.addWorksheet('Orçamento');

            await worksheet.protect('Mesp@123456', {
                selectLockedCells: true,
                selectUnlockedCells: true,
                formatCells: false,
                formatColumns: false,
                formatRows: false,
                insertColumns: false,
                insertRows: false,
                insertHyperlinks: false,
                deleteColumns: false,
                deleteRows: false,
                sort: false,
                autoFilter: false,
                pivotTables: false
            });

            worksheet.getCell('A2').value = 'PROPOSTA';
            worksheet.getCell('B2').value = numeroProposta;
            worksheet.getCell('A3').value = 'CNPJ';
            worksheet.getCell('B3').value = cnpj;
            worksheet.getCell('A4').value = 'ENTIDADE';
            worksheet.getCell('B4').value = nomeEntidade;
            worksheet.getCell('A5').value = 'DATA';
            worksheet.getCell('B5').value = new Date().toLocaleDateString('pt-BR');

            const subHeaderRow = worksheet.getRow(7);
            subHeaderRow.getCell(5).value = 'MEDIDAS';
            subHeaderRow.getCell(8).value = '1ª COTAÇÃO';
            subHeaderRow.getCell(12).value = '2ª COTAÇÃO';
            subHeaderRow.getCell(16).value = '3ª COTAÇÃO';
            subHeaderRow.getCell(20).value = 'COTAÇÃO DEFINIDA';

            const headerRow = worksheet.getRow(8);
            headerRow.getCell(1).value = 'Nº';
            headerRow.getCell(2).value = 'TIPO';
            headerRow.getCell(3).value = 'ITEM';
            headerRow.getCell(4).value = 'ESPECIFICAÇÃO DO ITEM';
            headerRow.getCell(5).value = 'QTD';
            headerRow.getCell(6).value = 'DIÁRIAS/MESES';
            headerRow.getCell(7).value = 'TOTAL';
            headerRow.getCell(8).value = 'RAZÃO ou LINK';
            headerRow.getCell(9).value = 'CNPJ';
            headerRow.getCell(10).value = 'VALOR UNITÁRIO';
            headerRow.getCell(11).value = 'VALOR TOTAL';
            headerRow.getCell(12).value = 'RAZÃO ou LINK';
            headerRow.getCell(13).value = 'CNPJ';
            headerRow.getCell(14).value = 'VALOR UNITÁRIO';
            headerRow.getCell(15).value = 'VALOR TOTAL';
            headerRow.getCell(16).value = 'RAZÃO ou LINK';
            headerRow.getCell(17).value = 'CNPJ';
            headerRow.getCell(18).value = 'VALOR UNITÁRIO';
            headerRow.getCell(19).value = 'VALOR TOTAL';
            headerRow.getCell(20).value = 'VALOR UNITÁRIO';
            headerRow.getCell(21).value = 'VALOR TOTAL';
            headerRow.getCell(22).value = 'JUSTIFICATIVA';
            headerRow.getCell(23).value = 'MENOR VALOR DE COTAÇÃO';

            worksheet.mergeCells('E7:G7');
            worksheet.mergeCells('H7:K7');
            worksheet.mergeCells('L7:O7');
            worksheet.mergeCells('P7:S7');
            worksheet.mergeCells('T7:U7');

            headerRow.eachCell({ includeEmpty: false }, (cell) => {
                cell.font = { bold: true, color: { argb: 'FF000000' } };
                cell.alignment = { vertical: 'middle', horizontal: 'center', wrapText: true };
                cell.border = {
                    top: { style: 'thin' },
                    left: { style: 'thin' },
                    bottom: { style: 'thin' },
                    right: { style: 'thin' }
                };
            });

            subHeaderRow.eachCell({ includeEmpty: false }, (cell) => {
                cell.font = { bold: true, color: { argb: 'FF000000' } };
                cell.alignment = { vertical: 'middle', horizontal: 'center', wrapText: true };
                cell.border = {
                    top: { style: 'thin' },
                    left: { style: 'thin' },
                    bottom: { style: 'thin' },
                    right: { style: 'thin' }
                };
            });

            worksheet.columns = [
                { width: 5 }, { width: 15 }, { width: 20 }, { width: 30 }, { width: 10 },
                { width: 15 }, { width: 10 }, { width: 20 }, { width: 15 }, { width: 15 },
                { width: 15 }, { width: 20 }, { width: 15 }, { width: 15 }, { width: 15 },
                { width: 20 }, { width: 15 }, { width: 15 }, { width: 15 }, { width: 15 },
                { width: 15 }, { width: 30 }, { width: 15 }
            ];

            subHeaderRow.getCell(5).fill = { type: 'pattern', pattern: 'solid', fgColor: { argb: 'FFB266' } };
            subHeaderRow.getCell(8).fill = { type: 'pattern', pattern: 'solid', fgColor: { argb: 'FFCC99' } };
            subHeaderRow.getCell(12).fill = { type: 'pattern', pattern: 'solid', fgColor: { argb: 'CCCCFF' } };
            subHeaderRow.getCell(16).fill = { type: 'pattern', pattern: 'solid', fgColor: { argb: '99CCFF' } };
            subHeaderRow.getCell(20).fill = { type: 'pattern', pattern: 'solid', fgColor: { argb: 'FF9999' } };

            let rowIndex = 9;
            carrinho.forEach(item => {
                const totals = [
                    item.empresas[0]?.total || 0,
                    item.empresas[1]?.total || 0,
                    item.empresas[2]?.total || 0
                ].filter(t => t > 0 && !isNaN(t));
                const menorValor = totals.length > 0 ? Math.min(...totals) : 0;
                const justificativa = item.empresaSelecionada.total > menorValor && menorValor !== 0 ? item.justificativa : '';
                const menorValorCotado = menorValor !== 0 ? menorValor : 0;
                const tipo = item.categoria.toUpperCase() === 'SERVICOS' ? 'SERVIÇOS/RECURSOS HUMANOS' : item.categoria.toUpperCase();
                const row = worksheet.getRow(rowIndex);
                row.values = [
                    item.id, tipo, `${item.item}${item.subitem ? ' - ' + item.subitem : ''}`, item.descricao,
                    item.quantidade, item.periodo === 'N/A' ? 'N/A' : item.periodo === 'diarias' ? 'Diárias' :
                        item.periodo === 'meses' ? 'Meses' :
                        item.periodo === 'UN' ? 'UN' :
                        item.periodo === 'Kit' ? 'Kit' : 'N/A',
                    item.total,
                    item.empresas[0]?.nome && item.empresas[0]?.link ? `${item.empresas[0].nome} - ${item.empresas[0].link}` : item.empresas[0]?.nome || '',
                    item.empresas[0]?.cnpj || '', item.empresas[0]?.unitario || 0, item.empresas[0]?.total || 0,
                    item.empresas[1]?.nome && item.empresas[1]?.link ? `${item.empresas[1].nome} - ${item.empresas[1].link}` : item.empresas[1]?.nome || '',
                    item.empresas[1]?.cnpj || '', item.empresas[1]?.unitario || 0, item.empresas[1]?.total || 0,
                    item.empresas[2]?.nome && item.empresas[2]?.link ? `${item.empresas[2].nome} - ${item.empresas[2].link}` : item.empresas[2]?.nome || '',
                    item.empresas[2]?.cnpj || '', item.empresas[2]?.unitario || 0, item.empresas[2]?.total || 0,
                    item.empresaSelecionada.unitario, item.empresaSelecionada.total,
                    justificativa,
                    menorValorCotado
                ];
                row.getCell(3).alignment = { wrapText: true };
                row.getCell(4).alignment = { wrapText: true };
                row.getCell(9).alignment = { wrapText: true };
                row.getCell(13).alignment = { wrapText: true };
                row.getCell(17).alignment = { wrapText: true };
                row.getCell(10).numFmt = '"R$ "#,##0.00';
                row.getCell(11).numFmt = '"R$ "#,##0.00';
                row.getCell(14).numFmt = '"R$ "#,##0.00';
                row.getCell(15).numFmt = '"R$ "#,##0.00';
                row.getCell(18).numFmt = '"R$ "#,##0.00';
                row.getCell(19).numFmt = '"R$ "#,##0.00';
                row.getCell(20).numFmt = '"R$ "#,##0.00';
                row.getCell(21).numFmt = '"R$ "#,##0.00';
                row.getCell(23).numFmt = '"R$ "#,##0.00';
                row.height = 60;
                rowIndex++;
            });

            const totalRow = worksheet.getRow(rowIndex);
            totalRow.getCell(1).value = 'TOTAL';
            totalRow.getCell(5).value = { formula: `SUM(E9:E${rowIndex - 1})` };
            totalRow.getCell(7).value = { formula: `SUM(G9:G${rowIndex - 1})` };
            totalRow.getCell(10).value = { formula: `SUM(J9:J${rowIndex - 1})` };
            totalRow.getCell(11).value = { formula: `SUM(K9:K${rowIndex - 1})` };
            totalRow.getCell(14).value = { formula: `SUM(N9:N${rowIndex - 1})` };
            totalRow.getCell(15).value = { formula: `SUM(O9:O${rowIndex - 1})` };
            totalRow.getCell(18).value = { formula: `SUM(R9:R${rowIndex - 1})` };
            totalRow.getCell(19).value = { formula: `SUM(S9:S${rowIndex - 1})` };
            totalRow.getCell(20).value = { formula: `SUM(T9:T${rowIndex - 1})` };
            totalRow.getCell(21).value = { formula: `SUM(U9:U${rowIndex - 1})` };
            totalRow.getCell(23).value = { formula: `SUM(W9:W${rowIndex - 1})` };
            totalRow.getCell(10).numFmt = '"R$ "#,##0.00';
            totalRow.getCell(11).numFmt = '"R$ "#,##0.00';
            totalRow.getCell(14).numFmt = '"R$ "#,##0.00';
            totalRow.getCell(15).numFmt = '"R$ "#,##0.00';
            totalRow.getCell(18).numFmt = '"R$ "#,##0.00';
            totalRow.getCell(19).numFmt = '"R$ "#,##0.00';
            totalRow.getCell(20).numFmt = '"R$ "#,##0.00';
            totalRow.getCell(21).numFmt = '"R$ "#,##0.00';
            totalRow.getCell(23).numFmt = '"R$ "#,##0.00';

            totalRow.eachCell({ includeEmpty: true }, (cell) => {
                cell.fill = { type: 'pattern', pattern: 'solid', fgColor: { argb: 'D3D3D3' } };
            });

            worksheet.pageSetup.orientation = 'landscape';

            const buffer = await workbook.xlsx.writeBuffer();
            const blobExcel = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
            const linkExcel = document.createElement('a');
            linkExcel.href = URL.createObjectURL(blobExcel);
            linkExcel.download = `Precificação_${numeroProposta}_${new Date().toISOString().slice(0, 10)}.xlsx`;
            document.body.appendChild(linkExcel);
            linkExcel.click();
            document.body.removeChild(linkExcel);

            await gerarPDF(carrinho);

        } catch (error) {
            console.error('Erro ao gerar Excel:', error);
            alert('Ocorreu um erro ao gerar o Excel. Verifique o console para mais detalhes.');
        }
    }

carregarPlanilha();
});
    </script>
</body>
</html>